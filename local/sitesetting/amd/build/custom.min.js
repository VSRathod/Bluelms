define(["jquery", "core/ajax", "core/notification"], function(e, c, t) {
	return {
		init: function(n) {
			e(document).ready(function() {
				$("#linkroot").addClass("active");
				function n(c) {
					var t = e("." + c + ":checkbox:not(:checked)"),
						n = c.replace("child", "parent");
					t.length > 0 ? e("input:checkbox." + n).prop("checked", !1) : e("input:checkbox." + n).prop("checked", !0)
				}

				function a(a) {
					c.call([{
						methodname: "local_sitesetting_getsettings",
						args: {
							roleid: a
						},
						done: function(c) {
							! function(c) {
								e("input:checkbox").prop("checked", !1);
								var t = [];
								c.forEach(function(c, n) {
									e("#" + c.setting).prop("checked", !0), t.includes(e("#" + c.setting).attr("class")) || t.push(e("#" + c.setting).attr("class"))
								}), t.forEach(function(e, c) {
									$childclass = e.replace("child-checkbox ", ""), n($childclass)
								})
							}(c), i()
						},
						fail: t.exception
					}])
				}

				function i() {
					e("#role").val() > 0 && e(".child-checkbox").is(":checked") ? e("#save").prop("disabled", !1) : e("#save").prop("disabled", !0)
				}
				var o = document.getElementsByClassName("collapse");
				for (let [e, c] of Object.entries(o)) c.setAttribute("data-parent", "#" + c.parentNode.parentNode.id);
				var l = 1,
					r = document.getElementsByClassName("parent-checkbox");
				for (let [e, c] of Object.entries(r)) {
					c.classList.add("parent-" + l);
					var s = c.closest('div[class^="tab-pane"]').id;
					s = s.replace("link", "");
					let e = c.parentNode.parentNode.parentNode.nextSibling.nextSibling.querySelectorAll('input[type="checkbox"]');
					for (let [t, n] of Object.entries(e)) n.classList.add("child-" + l), n.value = n.name + "--" + c.name + "--" + s;
					l += 1
				}
				e("input[type=checkbox]").change(function() {
					var c = e(this).attr("class").split(" "),
						t = c[1].split("-");
					if ("parent" !== t[0] || isNaN(t[1])) "child" !== t[0] || isNaN(t[1]) || n(c[1]);
					else {
						var a = c[1].replace("parent", "child");
						e("input:checkbox." + a).prop("checked", this.checked)
					}
					i()
				}), e("#role").change(function() {
					var c = e("#role").val();
					c > 0 ? a(c) : (e("input:checkbox").prop("checked", !1), i())
				})
			})
		}
	}
});