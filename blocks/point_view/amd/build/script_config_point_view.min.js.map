{"version":3,"sources":["../src/script_config_point_view.js"],"names":["define","$","ajax","notification","buttonWithAjaxCall","$button","message","ajaxmethod","ajaxargs","callback","click","e","M","util","show_confirm_dialog","get_string","call","methodname","args","done","fail","exception","setupDifficultyTrackChange","trackcolors","change","this","data","css","background-color","val","init","envconf","$enableReactions","$enableDifficultyTracks","updateElementsVisibility","updateEnableDisableButtonsFor","reactionsEnabled","difficultyTracksEnabled","toggle","sectionOrType","$checkboxes","nBoxesChecked","filter","length","toggleClass","each","prop","contextid","courseid","draftitemid","remove","document","querySelector","newsource","$img","attr","func","alert","cmid"],"mappings":"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","file":"script_config_point_view.min.js","sourcesContent":["// This file is part of Moodle - https://moodle.org/\n//\n// Moodle is free software: you can redistribute it and/or modify\n// it under the terms of the GNU General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// Moodle is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU General Public License for more details.\n//\n// You should have received a copy of the GNU General Public License\n// along with Moodle.  If not, see <http://www.gnu.org/licenses/>.\n\n/**\n * Defines the behavior of the configuration page of a Point of View block.\n * @copyright  2020 Quentin Fombaron, 2021 Astor Bizard\n * @license    http://www.gnu.org/copyleft/gpl.html GNU GPL v3 or later\n */\ndefine(['jquery', 'core/ajax', 'core/notification'], function($, ajax, notification) {\n\n    /**\n     * Manage updating of visibility state of elements related to Reactions and Difficulty tracks,\n     * depending on whether they are enabled or not.\n     */\n    function manageElementsVisibility() {\n        var $enableReactions = $('#id_config_enable_point_views');\n        var $enableDifficultyTracks = $('#id_config_enable_difficultytracks');\n\n        var updateElementsVisibility = function() {\n            var reactionsEnabled = $enableReactions.val() > 0;\n            var difficultyTracksEnabled = $enableDifficultyTracks.val() > 0;\n\n            $('#id_activities_header').toggle(reactionsEnabled || difficultyTracksEnabled);\n\n            $('.reactions, #id_images_header').toggle(reactionsEnabled);\n            $('.difficultytracks').toggle(difficultyTracksEnabled);\n        };\n\n        updateElementsVisibility();\n\n        $enableReactions.change(updateElementsVisibility);\n        $enableDifficultyTracks.change(updateElementsVisibility);\n    }\n\n    /**\n     * Manage Enable/Disable buttons for sections and module types.\n     */\n    function manageEnableDisableButtons() {\n\n        // Update of Enable/Disable buttons state for a section or module type,\n        // depending on checkboxes state for that section or module type.\n        var updateEnableDisableButtonsFor = function(sectionOrType) {\n            var $checkboxes = $('.cb' + sectionOrType + ':checkbox');\n            var nBoxesChecked = $checkboxes.filter(':checked').length;\n            $('#enableall' + sectionOrType).toggleClass('active', nBoxesChecked === $checkboxes.length);\n            $('#disableall' + sectionOrType).toggleClass('active', nBoxesChecked === 0);\n        };\n\n        $('.enablemodulereactions').change(function() {\n            updateEnableDisableButtonsFor($(this).data('type')); // Update Enable/Disable buttons state for module type.\n            updateEnableDisableButtonsFor($(this).data('section')); // Update Enable/Disable buttons state for section.\n        });\n\n        $('.enable-disable button').each(function() {\n            var sectionOrType = $(this).data('type') || $(this).data('section');\n\n            updateEnableDisableButtonsFor(sectionOrType); // Update Enable/Disable buttons state on page load.\n\n            $(this).click(function() {\n                $('.cb' + sectionOrType + ':checkbox')\n                .prop('checked', $(this).data('enable')) // Update all corresponding checkboxes.\n                .change(); // Trigger a change to update Enable/Disable buttons state accordingly.\n            });\n        });\n    }\n\n    /**\n     * Adds a listener to a button click with a confirm dialog and ajax call.\n     * @param {jQuery} $button The button to add the listener to.\n     * @param {String} message Confirmation message, a string component of block_point_view.\n     * @param {String} ajaxmethod Ajax method to be called.\n     * @param {Object} ajaxargs Arguments to be passed to the ajax call.\n     * @param {Function} callback A function called after ajax call completed successfully.\n     */\n    function buttonWithAjaxCall($button, message, ajaxmethod, ajaxargs, callback) {\n        $button.click(function(e) {\n            M.util.show_confirm_dialog(e, {\n                message: M.util.get_string(message, 'block_point_view'),\n                callback: function() {\n                    ajax.call([\n                        {\n                            methodname: 'block_point_view_' + ajaxmethod,\n                            args: ajaxargs,\n                            done: callback,\n                            fail: notification.exception\n                        }\n                    ]);\n                }\n            });\n        });\n    }\n\n    function setupDifficultyTrackChange(trackcolors) {\n     // Difficulty track change.\n        $('.moduletrackselect select').change(function() {\n            $('#track_' + $(this).data('id')).css({\n                'background-color': trackcolors[$(this).val()] // Change track color.\n            });\n        }).change(); // Update track colors once on page load.\n    }\n\n    return {\n        init: function(envconf, trackcolors) {\n\n            manageElementsVisibility();\n\n            manageEnableDisableButtons();\n\n            setupDifficultyTrackChange(trackcolors);\n\n            // Custom emoji deletion.\n            buttonWithAjaxCall(\n                    $('#delete_custom_pix'),\n                    'deleteemojiconfirmation',\n                    'delete_custom_pix',\n                    {\n                        contextid: envconf.contextid,\n                        courseid: envconf.courseid,\n                        draftitemid: $('input[name=\"config_point_views_pix\"]').val()\n                    },\n                    function() {\n                        $('.pix-preview[data-source=\"custom\"], #delete_custom_pix').remove(); // Remove emoji preview and button.\n                        // Refresh draft area files.\n                        // # For an unknown reason, the following instruction with jQuery does not work\n                        // # (or at least does not trigger the expected listener).\n                        document.querySelector('#fitem_id_config_point_views_pix .fp-path-folder-name').click();\n                    }\n            );\n\n            // Update current emoji on emoji change.\n            $('[name=config_pixselect]').change(function() {\n                var newsource = $(this).val();\n                $('img.currentpix').each(function() {\n                    var $img = $('img[data-source=\"' + newsource + '\"][data-reaction=\"' + $(this).data('reaction') + '\"]');\n                    if ($img.length == 1 && $img.attr('src') > '') {\n                        $(this).attr('src', $img.attr('src'));\n                    }\n                });\n            });\n\n            // Course reactions cleanup.\n            buttonWithAjaxCall(\n                    $('#cleanup_reactions'),\n                    'cleanupreactionsconfirmation',\n                    'update_db',\n                    {\n                        func: 'cleanup',\n                        courseid: envconf.courseid\n                    },\n                    function() {\n                        notification.alert(M.util.get_string('info', 'moodle'),\n                                M.util.get_string('reactionscleanedupsuccessfully', 'block_point_view'),\n                                M.util.get_string('ok', 'moodle'));\n                    }\n            );\n\n            // Course reactions reset.\n            buttonWithAjaxCall(\n                    $('#reset_reactions'),\n                    'resetreactionsconfirmation',\n                    'update_db',\n                    {\n                        func: 'reset',\n                        courseid: envconf.courseid\n                    },\n                    function() {\n                        notification.alert(M.util.get_string('info', 'moodle'),\n                                M.util.get_string('reactionsresetsuccessfully', 'block_point_view'),\n                                M.util.get_string('ok', 'moodle'));\n                    }\n            );\n\n            // Module reactions reset.\n            $('[data-role=reset_module').each(function() {\n                var cmid = $(this).data('cmid');\n                buttonWithAjaxCall(\n                        $(this),\n                        'resetreactionsonmoduleconfirmation',\n                        'update_db',\n                        {\n                            func: 'reset',\n                            courseid: envconf.courseid,\n                            cmid: cmid\n                        },\n                        function() {\n                            notification.alert(M.util.get_string('info', 'moodle'),\n                                    M.util.get_string('reactionsresetsuccessfully', 'block_point_view'),\n                                    M.util.get_string('ok', 'moodle'));\n                        }\n                );\n            });\n        },\n\n        setupDifficultyTrackChange: setupDifficultyTrackChange\n    };\n});"]}